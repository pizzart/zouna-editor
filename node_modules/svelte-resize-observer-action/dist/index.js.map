{"version":3,"sources":["../src/lib/index.ts"],"sourcesContent":["// keep track of which resize callback is associated with each element\ntype ResizeCallback = (entry: ResizeObserverEntry) => void\nconst resizeCallbacks = new WeakMap<Element, ResizeCallback>()\n\n// defined outside of action, so we only create a single instance\nlet resizeObserver: ResizeObserver\n\nexport function resize(target: Element, callback: ResizeCallback) {\n  // create on first use, inside the action, so we're SSR friendly\n  resizeObserver = resizeObserver || new ResizeObserver(entries => {\n    for (const entry of entries) {\n      const callback = resizeCallbacks.get(entry.target)\n      if (callback) {\n        callback(entry)\n      }\n    }\n  })\n\n  resizeCallbacks.set(target, callback)\n  resizeObserver.observe(target)\n\n  return {\n    destroy() {\n      resizeObserver.unobserve(target)\n      resizeCallbacks.delete(target)\n    }\n  }\n}"],"mappings":"AAEA,IAAMA,EAAkB,IAAI,QAGxBC,EAEG,SAASC,EAAOC,EAAiBC,EAA0B,CAEhE,OAAAH,EAAiBA,GAAkB,IAAI,eAAeI,GAAW,CAC/D,QAAWC,KAASD,EAAS,CAC3B,IAAMD,EAAWJ,EAAgB,IAAIM,EAAM,MAAM,EAC7CF,GACFA,EAASE,CAAK,CAElB,CACF,CAAC,EAEDN,EAAgB,IAAIG,EAAQC,CAAQ,EACpCH,EAAe,QAAQE,CAAM,EAEtB,CACL,SAAU,CACRF,EAAe,UAAUE,CAAM,EAC/BH,EAAgB,OAAOG,CAAM,CAC/B,CACF,CACF","names":["resizeCallbacks","resizeObserver","resize","target","callback","entries","entry"]}